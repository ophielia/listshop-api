apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "listshop-api.fullname" . }}
  namespace: listshop
  labels:
    {{- include "listshop-api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "listshop-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "listshop-api.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: list-service-static
          persistentVolumeClaim:
            claimName: list-service-pvc-list-service-static-set-0
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "listshop-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: LISTSHOP_EMAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.service.secrets }}
                  key: emailPassword
            - name: LISTSHOP_SERVER_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.service.secrets }}
                  key: dbPassword
            - name: LISTSHOP_SERVER_DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.service.secrets }}
                  key: dbUser
            - name: LISTSHOP_SERVER_DB_URL
              value: {{ .Values.service.database.url }}
            - name: LISTSHOP_SERVER_PORT
              value: '{{ .Values.service.port }}'
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.service.profile }}
          volumeMounts:
            - name: list-service-static
              mountPath: /opt/listshop/static
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          #          livenessProbe:
          #            httpGet:
          #              path: /
          #              port: http
          #          readinessProbe:
          #            httpGet:
          #              path: /
          #              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
